# This workflow currently runs the 'labeler' and 'stale' actions
name: Issue and PR Manager
run-name: Actions Monorepo Triage Manager - ${{ github.event_name }}
on:
  issues:
    # 'on issues' is used by: 'add-to-project' (opened, transferred)
    types:
      - opened
      # - labeled # consider using 'labeled' if auto assignments are configured with the 'actions/add-to-project' action
      - transferred
  pull_request:
    # 'on pull_request' is used by: 'pr-labeler'
    branches: [main]
    types:
      - opened
      - synchronize
      - reopened
      - labeled
      - unlabeled
  workflow_dispatch:
    inputs:
      triage_issues:
        description: 'Check for stale issues and PRs'
        required: true
        default: false
        type: boolean
      debug_output:
        description: 'Debug output'
        required: true
        default: false
        type: boolean
  # 'on schedule' is used by: 'stale-issue-and-pr'
  schedule:
    - cron: '15 14 * * 2' # At 2:15pm UTC every Tuesday, used by 'stale-issue-and-pr'


jobs:
  pr-labeler:
    name: Label pull requests
    runs-on: ubuntu-latest
    if: | 
      (github.repository_owner == 'rwaight') && (github.event_name == 'pull_request')
    permissions:
      contents: read
      pull-requests: write
    steps:
      # https://github.com/actions/create-github-app-token
      - name: Creating a GitHub App Token from actions/create-github-app-token
        #uses: actions/create-github-app-token@v1
        uses: actions/create-github-app-token@f2acddfb5195534d487896a656232b016a682f3c
        id: app-token
        with:
          # required
          app-id: ${{ secrets.RW_ACTIONS_APP_ID }}
          private-key: ${{ secrets.RW_ACTIONS_APP_KEY }}

      - name: Checkout files from commit tree
        uses: actions/checkout@v4

      - name: Apply non-versioning labels
        id: label-pull-request
        uses: actions/labeler@v5
        with:
          repo-token: ${{ steps.app-token.outputs.token }}

      - name: Check for semantic version labels
        #uses: docker://agilepathway/pull-request-label-checker:latest
        uses: rwaight/actions/github/label-checker@main # can use version specific or main
        #uses: rwaight/actions/github/label-checker@v1
        id: check-semver-labels
        with:
          prefix_mode: true
          one_of: "version:"
          #none_of: "skip-changelog"
          allow_failure: true
          #repo_token: ${{ secrets.GITHUB_TOKEN }}
          repo_token: ${{ steps.app-token.outputs.token }}

      - name: Apply the 'triage:version-needed' label to a pull request
        uses: actions/github-script@v6
        if: steps.check-semver-labels.outputs.label_check != 'success'
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['triage:version-needed']
            })

      # Fail the workflow because the proper version label has not been applied
      - name: Error - Missing proper 'version:' label
        id: labeler-force-failure
        if: steps.check-semver-labels.outputs.label_check != 'success'
        run: |
          echo "Running 'check-semver-labels' failed! The outcome was ${{ steps.check-semver-labels.outputs.label_check }} ."
          echo ""
          echo "::group::check-semver-labels information"
          echo "The pull request must have one of the 'version:' labels applied. "
          echo "::endgroup::"
          ##
          echo "::error file=actions-triage-manager.yml::check-semver-labels error"
          exit 1

  # Run 'Triage Issues and PRs', but only: At 2:15pm UTC every Tuesday; or manual (workflow_dispatch)
  stale-issue-and-pr:
    name: Check for stale issues and PRs
    if: | 
      (github.repository_owner == 'rwaight') && ( 
      (github.event_name=='schedule' && github.event.schedule=='15 14 * * 2') || 
      (github.event_name=='workflow_dispatch' && inputs.triage_issues==true)
      )
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    # From GitHub: https://github.com/marketplace/actions/close-stale-issues
    # See https://github.com/actions/stale#readme for configuration options
    steps:
      - name: Triage issues using actions/stale
        uses: actions/stale@v8
        with:
          days-before-close: -1 # do not close issues or PRs
          days-before-issue-stale: 90
          stale-issue-label: 'triage:stale'
          stale-issue-message: >-
            This issue has not been updated in a while and is being labeled as `triage:stale`.

            It would be helpful to take a look at the issue and confirm it is still relevant.
          #days-before-issue-close: -1 # do not close issues when deployed to production
          #close-issue-message: 'This issue has not been updated in a while and is being closed.'
          days-before-pr-stale: 21
          stale-pr-label: 'triage:stale'
          stale-pr-message: >-
            This Pull Request (PR) has not been updated in a while and is being labeled as `triage:stale`.

            It would be helpful to review the PR and confirm it is still relevant.
          remove-stale-when-updated: true
          labels-to-remove-when-unstale: 'triage:stale'
          operations-per-run: 100
          #repo-token: ${{ secrets.MY_ACTIONS_TOKEN }}


  # Run the 'not-repo-owner' job if the repository_owner is not correct
  not-repo-owner:
    name: Print a random note
    runs-on: ubuntu-latest
    if: (github.repository_owner != 'rwaight')
    env:
      MY_WORKFLOW_DEBUG: ${{ inputs.debug_output || 'false' }}
    steps:
      - name: Print a message based on a condition
        id: print-message
        run: |
          echo "This workflow was run in a forked repo. Unless this file is updated, none of the jobs will run. "
          echo ""
